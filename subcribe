#!/usr/bin/env php
<?php

$sites = @include __DIR__ . '/data/sites.php';
if ( ! $sites ) {
	$sites = [];
}

if ( empty( $argv[1] ) ) {
	fwrite( STDERR, "$argv[0] SITE\n" );
	exit( 1 );
}

function generate_random_string() {
	if ( function_exists( 'random_bytes' ) ) {
		$bytes = random_bytes( 36 );
	} elseif ( function_exists( 'openssl_random_pseudo_bytes' ) ) {
		$bytes = openssl_random_pseudo_bytes( 36 );
	} else {
		$bytes = '';
		for ( $b = 0; $b < 36; $b++ ) {
			$bytes += chr( mt_rand( 0, 255 ) );
		}
	}

	return strtr( base64_encode( $bytes ), [ '+' => '-', '/' => '_' ] );
}

function get_hub( $feed_url ) {
	$feed = file_get_contents( $feed_url );
	if ( ! $feed ) {
		return false;
	}
	libxml_disable_entity_loader( true );
	$document = new DOMDocument;
	if ( ! $document->loadXML( $feed ) ) {
		return false;
	}

	$atom_links = $document->getElementsByTagNameNS( 'http://www.w3.org/2005/Atom', 'link' );
	for ( $i = 0; $i < $atom_links->length; $i++ ) {
		$rel = $atom_links->item( $i )->attributes->getNamedItem( 'rel' );
		if ( ! $rel || 'hub' !== $rel->value ) {
			continue;
		}

		return $atom_links->item( $i )->attributes->getNamedItem( 'href' )->value;
	}

	return false;
}

if ( ! isset( $sites[$argv[1]] ) ) {
	$secret = generate_random_string();
	$token = generate_random_string();
	$hub = get_hub( $argv[1] );

	if ( ! $hub ) {
		fwrite( STDERR, sprintf( "Could not get hub URL for %s\n", $argv[1] ) );
		exit( 1 );
	}

	fwrite( STDERR, sprintf( "Add subscription for %s (%s)? [y/N]: ", $argv[1], $hub ) );
	$response = strtolower( trim( fgets( STDIN ) ) );
	if ( ! $response || 'y' !== $response[0] ) {
		exit( 0 );
	}

	$sites[$argv[1]] = compact( 'secret', 'token', 'hub' );
	file_put_contents(
		__DIR__ . '/data/sites.php',
		sprintf(
			'<?php return %s;',
			var_export( $sites, true )
		)
	);
}

$botwaffe_url = trim( file_get_contents( __DIR__ . '/data/URL' ) );

$body = [
	'hub.callback'     => $botwaffe_url,
	'hub.mode'         => 'subscribe',
	'hub.topic'        => $argv[1],
	'hub.verify'       => 'sync',
	'hub.secret'       => $sites[$argv[1]]['secret'],
	'hub.verify_token' => $sites[$argv[1]]['token'],
];

$context = stream_context_create( [
	'http' => [
		'method'        => 'POST',
		'header'        => 'Content-Type: application/x-www-form-urlencoded',
		'content'       => http_build_query( $body ),
		'ignore_errors' => true,
	],
] );

$contents = file_get_contents( $sites[$argv[1]]['hub'], false, $context );
var_dump( $http_response_header );
die( "$contents\n" );
